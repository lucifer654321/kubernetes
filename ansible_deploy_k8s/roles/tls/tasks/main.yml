---
- name: 获取当前路径
  shell: pwd | sed 's#roles/tls##'
  register: root_dir

- name: 创建证书目录
  file: dest={{ item }} state=directory
  with_items:
    - "{{local_cert_dir}}/etcd"
    - "{{local_cert_dir}}/k8s"

- name: 准备cfssl工具
  unarchive: src={{ software_dir }}/cfssl.tar.gz dest={{remote_bin_dir}} mode=u+x

- name: 准备etcd证书请求文件
  template: src=etcd/{{ item }} dest={{local_cert_dir}}/etcd/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - ca-config.json.j2
    - etcd-ca-csr.json.j2
    - etcd-csr.json.j2

- name: 准备k8s证书请求文件
  template: src=k8s/{{ item }} dest={{ local_cert_dir }}/k8s/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - ca-config.json.j2
    - ca-csr.json.j2
    - kube-apiserver-csr.json.j2
    - kube-controller-manager-csr.json.j2
    - kube-scheduler-csr.json.j2
    - admin-csr.json.j2
    - front-proxy-ca-csr.json.j2
    - front-proxy-client-csr.json.j2
    - kube-proxy-csr.json.j2

- name: 准备生成k8s证书脚本
  template: src=generate_cert.sh.j2 dest={{ local_cert_dir }}/generate_cert.sh mode=u+x

- name: 生成k8s证书
  script: creates={{item}} chdir={{ local_cert_dir }} {{ local_cert_dir }}/generate_cert.sh "{{root_dir.stdout}}"
  with_items:
    - "roles/master/files/k8s_cert/ca.pem"
    - "roles/etcd/files/etcd_cert/etcd.pem"
    - "roles/worker/files/k8s_cert/kube-proxy.pem"
  # shell: cd {{ local_cert_dir }} && /usr/bin/bash generate_cert.sh {{root_dir.stdout}}
